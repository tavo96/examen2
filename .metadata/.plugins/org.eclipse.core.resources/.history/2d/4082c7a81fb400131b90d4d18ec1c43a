package com.me.mygdxgame;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input.Keys;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.Texture.TextureFilter;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.badlogic.gdx.graphics.g2d.TextureRegion;


public class MyGdxGame implements ApplicationListener {
	private OrthographicCamera camera;
	private SpriteBatch batch;
	private Sprite sprite_enemigo;
	private Sprite	sprite_nave;
	private Sprite estrellas;
	private Texture texture_nave; 
	private Texture texture_enemigo; 
	private Texture txt_estrellas;
	float translate;
	@Override
	public void create() {		
		float w = Gdx.graphics.getWidth();
		float h = Gdx.graphics.getHeight();
		
		camera = new OrthographicCamera(1, h/w);
		batch = new SpriteBatch();
		
		texture_nave = new Texture(Gdx.files.internal("data/pelotita.png"));
		sprite_nave = new Sprite(texture_nave,128,64);
		sprite_nave.setPosition(-0.0f, -0.0f);
		sprite_nave.setSize(0.2f, 0.2f);
		
		txt_estrellas = new Texture(Gdx.files.internal("data/estrellas.png"));
		estrellas = new Sprite(txt_estrellas,128,64);
		estrellas.setPosition(-0.5f, -0.5f);
		estrellas.setSize(1f, 0.9f);
		
		
		
		texture_enemigo = new Texture(Gdx.files.internal("data/enemigo.png"));
		sprite_enemigo = new Sprite(texture_enemigo,128,64);
		sprite_enemigo.setPosition(-0.0f, -0.2f);
		sprite_enemigo.setSize(0.2f, 0.2f);
		                                   
	
	}

	@Override
	public void dispose() {

		batch.dispose();
		texture_enemigo .dispose();
	}

	@Override
	public void render() {	
		sprite_enemigo.setX(translate);		
		if(Gdx.input.isTouched())
		{	
			translate-=0.01;
		}
	
		
		Gdx.gl.glClearColor(0f,0.5f,0.3f,1f);
		
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		
		batch.setProjectionMatrix(camera.combined);
		batch.begin();
		estrellas.draw(batch);
		sprite_nave.draw(batch);
		sprite_enemigo.draw(batch);
		batch.end();
	}

	@Override
	public void resize(int width, int height) {
	}

	@Override
	public void pause() {
	}

	@Override
	public void resume() {
	}
}
